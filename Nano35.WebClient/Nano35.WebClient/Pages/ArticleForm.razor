@using Nano35.WebClient.Services
@using Nano35.HttpContext.storage
@inject ISessionProvider SessionProvider
@inject IRequestManager RequestManager 
@inject HttpClient HttpClient 


<EditForm Model="@_model" 
          OnValidSubmit="HandleValidSubmit">
    <InputField Title="Категория">
        <Controls>
            <SelectArticleCategory SelectedCategoryId="_model.CategoryId"/>
        </Controls>
    </InputField>
    
    <InputField Title="Бренд">
        <Controls>
            <InputText @bind-Value="_model.Brand" 
                        class="form-control"/>
        </Controls>
    </InputField>
    
    <InputField Title="Модель">
        <Controls>
            <InputText @bind-Value="_model.Model" 
                        class="form-control"/>
        </Controls>
    </InputField>
    
    <InputField Title="Описание">
        <Controls>
            <InputText @bind-Value="_model.Info" 
                        class="form-control"/>
        </Controls>
    </InputField>
    
    <InputField Title="Харрактеристики">
        <Controls>
            <AddArticleSpecification AddedSpecs="_model.Specs"/>
        </Controls>
    </InputField>
    
    @if (_loading)
    {
        <button class="btn btn-primary" 
                disabled>
            Создать
        </button>
    }
    else
    {
        <button class="btn btn-primary">
            Создать
        </button>
    }
</EditForm>

@code
{
    private bool _loading = true;
    private CreateArticleHttpBody _model = new CreateArticleHttpBody();
        
    protected override async Task OnInitializedAsync()
    {
        _model.InstanceId = await SessionProvider.GetCurrentInstanceId();
        _model.NewId = Guid.NewGuid();
        _loading = false;
    }

    private async void HandleValidSubmit()
    {
        await new CreateArticleRequest(RequestManager, HttpClient, _model).Send();
    }
}