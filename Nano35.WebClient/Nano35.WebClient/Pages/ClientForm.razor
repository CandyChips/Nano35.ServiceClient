@using Nano35.WebClient.Services
@using Nano35.HttpContext.instance
@inject HttpClient HttpClient
@inject IRequestManager RequestManager
@inject IInstanceService InstanceService

<EditForm Model="@Model" OnValidSubmit="Create">
    <DataAnnotationsValidator />
    
    <InputField Title="Имя клиента">
        <Controls>
            <InputText @bind-Value="Model.Name" 
                        class="form-control"/>
        </Controls>
    </InputField>
    
    <InputField Title="Эл почта">
        <Controls>
            <InputText @bind-Value="Model.Email" 
                        class="form-control"/>
        </Controls>
    </InputField>
    
    <InputField Title="Номер телефона">
        <Controls>
            <InputText @bind-Value="Model.Phone" 
                        class="form-control"/>
        </Controls>
    </InputField>
    
    <InputField Title="Скидка">
        <Controls>
            <InputNumber @bind-Value="Model.Selle" 
                          class="form-control"/>
        </Controls>
    </InputField>
    
    <InputField Title="Статус клиента">
        <Controls>
            <InputSelect @bind-Value="Model.ClientStateId" class="custom-select">
                @if (_loading)
                {
                    <option selected disabled>Загрузка</option>
                }
                else
                {
                    <option selected disabled>Выберите статус клиента</option>
                    @foreach (var item in State)
                    {
                        <option value="@item.Id">@item.Name </option>
                    }
                }
            </InputSelect>
        </Controls>
    </InputField>
    
    <InputField Title="Тип клиента">
        <Controls>
            <InputSelect @bind-Value="Model.ClientTypeId" class="custom-select">
                @if (_loading)
                {
                    <option selected disabled>Загрузка</option>
                }
                else
                {
                    <option selected disabled>Выберите тип клиента</option>
                    @foreach (var item in Types)
                    {
                        <option value="@item.Id">@item.Name </option>
                    }
                }
            </InputSelect>
        </Controls>
    </InputField>
    
    @if (!string.IsNullOrEmpty(_error))
    {
        <div class="alert alert-danger mt-3 mb-0">@_error</div>
    }
    @if (_loading)
    {
        <button class="btn btn-primary" disabled>
            Создать
        </button>
    }
    else
    {
        <button class="btn btn-primary">
            Создать
        </button>
    }
</EditForm>

@code
{
    [Parameter] public CreateClientHttpBody Model { get; set; }
    [Parameter] public EventCallback FormSubmitted { get; set; }
    [Parameter] public string Error { get; set; }
        
    private List<ClientTypeViewModel> Types { get; set; }
    private List<ClientStateViewModel> State { get; set; }
    private bool _loading = true;
    private string _error = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        State = (await (new GetAllClientStatesRequest(RequestManager, HttpClient, new GetAllClientStatesHttpQuery())).Send()).Data.ToList();
        Types = (await (new GetAllClientTypesRequest(RequestManager, HttpClient, new GetAllClientTypesHttpQuery()).Send())).Data.ToList();
        _loading = false;
    }

    private async void Create()
    {
        await FormSubmitted.InvokeAsync();
    }
    
}
