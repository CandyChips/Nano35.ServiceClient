@using Nano35.HttpContext.storage
<div class="modal-background">
    <div class="modal-content card">
        <h4 class="card-header">Новое оприходование</h4>
        <div class="card-body">
            <EditForm Model="@_model" OnSubmit="Create">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Номер оприходования</label>
                    <InputText @bind-Value="_model.Number" 
                                class="form-control"
                                placeholder="Введите уникальный номер оприходования" />
                </div>
                
                <SelectClient
                    OnClientChanged="ComingClientChanged"/>
                
                <SelectUnit
                    SelectedUnitId="_model.UnitId"/>
                
                <div class="form-group">
                    <label>Комментарий</label>
                    <InputText @bind-Value="_model.Comment" 
                                class="form-control"
                                placeholder="Введите коментарий к оприходованию"  />
                </div>
                <div class="form-group">
                    <label>Оприходуемые товары</label>
                    @if (_model.UnitId != Guid.Empty)
                    {
                        <button type="button" 
                                class="btn btn-outline-primary"
                                style="width: 100%"
                                @onclick="() => { _isNewComingDetailDisplay = true; }">
                            Добавить
                        </button>
                    }
                    else
                    {
                        <span style="width: 100%" class="d-inline-block" tabindex="0" data-toggle="tooltip" title="Для добавления товаров к оприходованию укажите целевое подразделение">
                            <button type="button" 
                                class="btn btn-outline-primary"
                                style="width: 100%"
                                disabled>
                                Добавить
                            </button>
                        </span>
                        
                    }
                    <Grid Items="@_details" TItem="CreateComingDetailViewModel">    
                        <Header>  
                            <th>Товар</th>
                            <th>Количество</th>
                            <th>Цена</th>
                        </Header>  
                        <Row Context="item">  
                            <td>@item.PlaceOnStorage</td>
                            <td>@item.PlaceOnStorage</td>
                            <td>@item.Price</td>
                        </Row>  
                    </Grid>
                </div>
                @if (!string.IsNullOrEmpty(_error))
                {
                    <div class="alert alert-danger mt-3 mb-0">@_error</div>
                }
                <div class="btn-group">
                    @if (!_loading)
                    {
                        <input type="submit"
                               class="btn btn-primary"
                               value="Создать"/>
                            
                    }
                    else
                    {
                        <button class="btn btn-primary" disabled>
                            Создать
                        </button>
                        
                    }
                    <button class="btn btn-secondary"
                            @onclick="HideModalNewComing">Закрыть
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<Modal Title="Новая позиция к оприходованию" 
       IsDisplay="@_isNewComingDetailDisplay">
    <Form>
        <AddComingDetailForm
            OnAddNewComingDetail="AddComingDetail"
            UnitId="_model.UnitId"/>
    </Form>
</Modal>

