@using Nano35.WebClient.Services
@using Nano35.HttpContext.storage
@inject IRequestManager RequestManager
@inject ISessionProvider SessionProvider 
@inject HttpClient HttpClient 

<EditForm Model="@_model" OnValidSubmit="Create">
    <DataAnnotationsValidator />
                
    <SelectArticle
        SelectedArticlesId="_model.ArticleId"/>
                
    <SelectStorageItemCondition
        SelectedConditionId="_model.ConditionId"/>
                
    <InputField Title="Комментарий">
        <Controls>
            <InputText @bind-Value="_model.Comment" 
                        class="form-control"/>
        </Controls>
    </InputField>
                
    <InputField Title="Скрытый комментарий">
        <Controls>
            <InputText @bind-Value="_model.HiddenComment" 
                        class="form-control"/>
        </Controls>
    </InputField>
                
    <InputField Title="Закупочная цена">
        <Controls>
            <InputNumber @bind-Value="_model.RetailPrice" 
                          class="form-control"/>
        </Controls>
    </InputField>
                
    <InputField Title="Цена продажи">
        <Controls>
            <InputNumber @bind-Value="_model.PurchasePrice" 
                          class="form-control"/>
        </Controls>
    </InputField>
    
                
    <div class="input-group mb-3">
        <label class="input-group-text" for="inputGroupFile01">Фотографии: </label>
        <input type="file" class="form-control" id="inputGroupFile01">
    </div>
            
    <button class="btn btn-primary"> Создать </button>
</EditForm>

@code
{
    private bool _loading = true;
    private CreateStorageItemHttpBody _model = new CreateStorageItemHttpBody();
    private List<StorageItemConditionViewModel> _conditions = new List<StorageItemConditionViewModel>();
        
        
    protected override async Task OnInitializedAsync()
    {
        _model.InstanceId = await SessionProvider.GetCurrentInstanceId();
        _model.NewId = Guid.NewGuid();
        _loading = false;
    }

    private async Task Create()
    { 
        await new CreateStorageItemRequest(RequestManager, HttpClient, _model).Send();
    }
    
}
